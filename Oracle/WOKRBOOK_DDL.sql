-- 1.
CREATE TABLE TB_CATEGORY(
    NAME VARCHAR2(10),
    USE_YN CHAR(1) DEFAULT 'Y'
    );
    
SELECT * FROM TB_CATEGORY;

-- 2. 
CREATE TABLE TB_CLASS_TYPE(
    NO VARCHAR2(5) PRIMARY KEY,
    NAME VARCHAR2(10)
    );
    
SELECT * FROM TB_CLASS_TYPE;


-- 3.
ALTER TABLE TB_CATEGORY
ADD CONSTRAINT NAME_PK PRIMARY KEY (NAME);


-- 4.
ALTER TABLE TB_CLASS_TYPE
MODIFY NAME NOT NULL;


-- 5.
ALTER TABLE TB_CATEGORY
MODIFY NAME VARCHAR2(20);

ALTER TABLE TB_CLASS_TYPE
MODIFY NAME VARCHAR2(20)
MODIFY NO VARCHAR2(10);


-- 6.
ALTER TABLE TB_CATEGORY RENAME COLUMN NAME TO CATEGORY_NAME;
ALTER TABLE TB_CLASS_TYPE RENAME COLUMN NAME TO CLASS_TYPE_NAME;
ALTER TABLE TB_CLASS_TYPE RENAME COLUMN NO TO CLASS_TYPE_NO;


-- 7.
ALTER TABLE TB_CATEGORY RENAME CONSTRAINT NAME_PK TO PK_CATEGORY_NAME;
ALTER TABLE TB_CLASS_TYPE RENAME CONSTRAINT SYS_C007195 TO PK_CLASS_TYPE_NO;


-- 8.
INSERT INTO TB_CATEGORY VALUES ('공학', 'Y');
INSERT INTO TB_CATEGORY VALUES ('자연과학', 'Y');
INSERT INTO TB_CATEGORY VALUES ('의학', 'Y');
INSERT INTO TB_CATEGORY VALUES ('예체능', 'Y');
INSERT INTO TB_CATEGORY VALUES ('인문사회', 'Y');
COMMIT;


-- 9.
ALTER TABLE TB_DEPARTMENT
ADD CONSTRAINT FK_DEPARTMENT_CATEGORY FOREIGN KEY (CATEGORY) 
    REFERENCES TB_CATEGORY(CATEGORY_NAME);


-- 10.
-- 시스템계정으로 CREATE VIEW 권한 부여하기
GRANT CREATE VIEW TO WORKBOOK;
-- 권한 부여 후 WORKBOOK으로 복귀함.

CREATE VIEW VW_학생일반정보(학번, 학생이름, 주소)
AS SELECT STUDENT_NO, STUDENT_NAME, STUDENT_ADDRESS
    FROM TB_STUDENT;

SELECT * FROM VW_학생일반정보;


-- 11.
CREATE VIEW VW_지도면담(학생이름, 학과이름, 지도교수이름)
AS SELECT STUDENT_NAME, DEPARTMENT_NAME, NVL(PROFESSOR_NAME,'지도교수없음')
    FROM TB_STUDENT 
    LEFT JOIN TB_DEPARTMENT USING (DEPARTMENT_NO)
    LEFT JOIN TB_PROFESSOR ON (PROFESSOR_NO = COACH_PROFESSOR_NO)
    ORDER BY 2;


-- 12. 
CREATE OR REPLACE VIEW VW_학과별학생수(DEPARTMENT_NAME, STUDENT_COUNT)
AS SELECT DEPARTMENT_NAME, COUNT(STUDENT_NO) 
    FROM TB_DEPARTMENT
    LEFT JOIN TB_STUDENT USING (DEPARTMENT_NO)
    GROUP BY DEPARTMENT_NAME;
    
SELECT * FROM VW_학과별학생수;


-- 13.
SELECT * FROM VW_학생일반정보
WHERE 학번 = 'A213046';

UPDATE VW_학생일반정보
SET 학생이름 = '홍길동'
WHERE 학번 = 'A213046';


-- 14.
CREATE OR REPLACE VIEW VW_학생일반정보(학번, 학생이름, 주소)
AS SELECT STUDENT_NO, STUDENT_NAME, STUDENT_ADDRESS
    FROM TB_STUDENT WITH READ ONLY;

SELECT * FROM VW_학생일반정보;


-- 15.
SELECT "과목번호", "과목이름", "누적수강생수(명)"
FROM (SELECT CLASS_NO "과목번호", CLASS_NAME "과목이름", COUNT(*) "누적수강생수(명)"
        FROM TB_CLASS
        JOIN TB_GRADE USING(CLASS_NO)
--        WHERE TERM_NO LIKE '2009%'
--            OR TERM_NO LIKE '2008%'
--            OR TERM_NO LIKE '2007%'
WHERE SUBSTR(TERM_NO,1,4) >= (SELECT MAX(SUBSTR(TERM_NO,1,4))-3
                             FROM TB_GRADE)
GROUP BY CLASS_NO, CLASS_NAME
ORDER BY 3 DESC)
WHERE ROWNUM <= 3;
--WHERE ROWNUM BETWEEN 1 AND 3;

-- 가장 최근학기 조회
SELECT MAX(SUBSTR(TERM_NO,1,4))
FROM TB_GRADE; --2009




--?????나도몰라..
SELECT S.*
FROM (
SELECT ROWNUM AS NUM, T.* FROM TB_STUDENT T
ORDER BY STUDENT_NO DESC
) S
WHERE ROWNUM BETWEEN 10 AND 20;







