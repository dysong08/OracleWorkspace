-- BASIC SELECT

-- 1.
SELECT DEPARTMENT_NAME "학과 명", CATEGORY "계열"
FROM TB_DEPARTMENT;

-- 2.
SELECT DEPARTMENT_NAME || '의 정원은 ' || CAPACITY || '명 입니다.'  "학과별 정원"
FROM TB_DEPARTMENT;

-- 3.  
SELECT STUDENT_NAME 
FROM TB_STUDENT
WHERE ABSENCE_YN = 'Y'
AND DEPARTMENT_NO = '001'
AND SUBSTR(STUDENT_SSN, 8, 1) ='2';

-- 4.
SELECT STUDENT_NAME
FROM TB_STUDENT
WHERE STUDENT_NO IN('A513079', 'A513090', 'A513091', 'A513110', 'A513119');


-- 5. 
SELECT DEPARTMENT_NAME, CAPACITY
FROM TB_DEPARTMENT
WHERE CAPACITY BETWEEN 20 AND 30;

-- 6. 
SELECT PROFESSOR_NAME
FROM TB_PROFESSOR
WHERE DEPARTMENT_NO IS NULL;

-- 7.
SELECT *
FROM TB_STUDENT
WHERE DEPARTMENT_NO IS NULL;
    

-- 8.
SELECT CLASS_NO
FROM TB_CLASS
WHERE PREATTENDING_CLASS_NO IS NOT NULL;

-- 9.
SELECT DISTINCT CATEGORY
FROM TB_DEPARTMENT;

-- 10.
SELECT STUDENT_NO, STUDENT_NAME, STUDENT_SSN
FROM TB_STUDENT
WHERE ABSENCE_YN = 'N'
AND ENTRANCE_DATE LIKE '02%'
AND STUDENT_ADDRESS LIKE '%전주%';


-------------------------------------------------------------
-------------------------------------------------------------

-- ADDITIONAL SELECT - 함수

-- 1.
SELECT STUDENT_NO "학번", STUDENT_NAME "이름", 
        TO_CHAR(ENTRANCE_DATE, 'YYYY-MM-DD') "입학년도"
FROM TB_STUDENT
WHERE DEPARTMENT_NO = '002'
ORDER BY ENTRANCE_DATE;

-- 2.
SELECT PROFESSOR_NAME, PROFESSOR_SSN
FROM TB_PROFESSOR
--WHERE LENGTH(PROFESSOR_NAME) != 3; (==)
WHERE PROFESSOR_NAME NOT LIKE '___';

-- 3.
SELECT PROFESSOR_NAME "교수이름", 
        --2023-(19||SUBSTR(PROFESSOR_SSN, 1, 2)) "나이" 
        EXTRACT(YEAR FROM SYSDATE) - (19 || SUBSTR(PROFESSOR_SSN, 1, 2)) "나이"
FROM TB_PROFESSOR
WHERE SUBSTR(PROFESSOR_SSN, 8, 1) = 1
ORDER BY 2;

-- 4. 
SELECT SUBSTR(PROFESSOR_NAME, 2) "이름"
FROM TB_PROFESSOR;

-- 5. 입학년도-출생년도
SELECT STUDENT_NO, STUDENT_NAME
FROM TB_STUDENT
WHERE EXTRACT(YEAR FROM ENTRANCE_DATE) 
        - EXTRACT(YEAR FROM TO_DATE(SUBSTR(STUDENT_SSN, 1, 6))) > 19;

-- 6.
SELECT TO_CHAR(TO_DATE(20201215), 'YYYY"년" MON DD"일" DAY')
FROM DUAL;

-- 7. 
SELECT TO_DATE('99/10/11', 'YY/MM/DD'), --2099년
       TO_DATE('49/10/11', 'YY/MM/DD'), --2049년
       TO_DATE('99/10/11', 'RR/MM/DD'), --1999년
       TO_DATE('49/10/11', 'RR/MM/DD') --2049년
FROM DUAL;

-- 8.
SELECT STUDENT_NO, STUDENT_NAME
FROM TB_STUDENT
WHERE SUBSTR(STUDENT_NO, 1, 1) != 'A';

-- 9.
SELECT ROUND((AVG(POINT)),1) "평점"
FROM TB_GRADE
WHERE STUDENT_NO = 'A517178';

-- 10. 
SELECT DEPARTMENT_NO "학과번호", COUNT(*) "학생수(명)"
FROM TB_STUDENT
GROUP BY DEPARTMENT_NO
ORDER BY 1;

-- 11.
SELECT COUNT(*)
FROM TB_STUDENT
WHERE COACH_PROFESSOR_NO IS NULL;

-- 12.
SELECT SUBSTR(TERM_NO, 1, 4) "년도", ROUND(AVG(POINT), 1) "년도 별 평균"
FROM TB_GRADE
WHERE STUDENT_NO = 'A112113' 
GROUP BY SUBSTR(TERM_NO, 1, 4);

-- 13.
SELECT DEPARTMENT_NO "학과코드명", COUNT(REPLACE(ABSENCE_YN, 'N', NULL)) "휴학생 수"
FROM TB_STUDENT
GROUP BY DEPARTMENT_NO
ORDER BY 1;

SELECT DEPARTMENT_NO "학과코드명", COUNT(DECODE(ABSENCE_YN, 'Y',1 /*, NULL*/) ) "휴학생 수"
FROM TB_STUDENT
GROUP BY DEPARTMENT_NO
ORDER BY 1;
-- FROM -> WHERE 순으로 실행하기 때문에 COUNT(*)는 학생수가 없는 학과를 COUNT하지 못함


-- 14.
SELECT STUDENT_NAME "동일이름", COUNT(*) "동명인 수"
FROM TB_STUDENT
GROUP BY STUDENT_NAME
HAVING COUNT(*) != 1
ORDER BY 1;

-- 15.
SELECT SUBSTR(TERM_NO, 1, 4) "년도", SUBSTR(TERM_NO, 5, 2) "학기",
        ROUND(AVG(POINT),1) "평점"
FROM TB_GRADE
WHERE STUDENT_NO = 'A112113'
GROUP BY ROLLUP(SUBSTR(TERM_NO, 1, 4), SUBSTR(TERM_NO, 5, 2))
ORDER BY 1;


------------------------------------------------------------
------------------------------------------------------------

-- ADDITIONAL SELECT - OPTION

-- 1.
SELECT STUDENT_NAME "학생 이름", STUDENT_ADDRESS "주소지"
FROM TB_STUDENT
ORDER BY 1;

-- 2.
SELECT STUDENT_NAME, STUDENT_SSN
FROM TB_STUDENT
WHERE ABSENCE_YN = 'Y'
ORDER BY 2 DESC;

-- 3. 
SELECT STUDENT_NAME "학생이름", STUDENT_NO"학번", STUDENT_ADDRESS "거주지 주소"
FROM TB_STUDENT
WHERE STUDENT_NO LIKE '9%' 
AND (STUDENT_ADDRESS LIKE '%강원도%' OR
     STUDENT_ADDRESS LIKE '%경기도%')
ORDER BY 1;
   
-- 4. 서브쿼리도 가능함 WHERE절
SELECT PROFESSOR_NAME, PROFESSOR_SSN
FROM TB_PROFESSOR
JOIN TB_DEPARTMENT USING (DEPARTMENT_NO)
WHERE DEPARTMENT_NO ='005'
ORDER BY 2;

-- 5. 
SELECT STUDENT_NO, TO_CHAR(POINT, 9.99)"POINT"
FROM TB_GRADE
WHERE CLASS_NO = 'C3118100'
    AND TERM_NO = '200402'
ORDER BY 2 DESC;

-- 6.
SELECT STUDENT_NO, STUDENT_NAME, DEPARTMENT_NAME
FROM TB_STUDENT
JOIN TB_DEPARTMENT USING (DEPARTMENT_NO)
ORDER BY 2;

-- 7.
SELECT CLASS_NAME, DEPARTMENT_NAME
FROM TB_CLASS
JOIN TB_DEPARTMENT USING (DEPARTMENT_NO);

-- 8. 다시@@@@@
SELECT CLASS_NAME, PROFESSOR_NAME
FROM TB_CLASS
JOIN TB_CLASS_PROFESSOR USING (CLASS_NO)
JOIN TB_PROFESSOR USING (PROFESSOR_NO)
ORDER BY 2;

-- 9. 다시@@@@@
SELECT CLASS_NAME, PROFESSOR_NAME
FROM TB_CLASS
JOIN TB_CLASS_PROFESSOR USING (CLASS_NO)
JOIN TB_PROFESSOR P USING (PROFESSOR_NO)
JOIN TB_DEPARTMENT D ON (P.DEPARTMENT_NO = D.DEPARTMENT_NO)
WHERE CATEGORY = '인문사회';

-- 10. 다시@@@@@
SELECT G.STUDENT_NO "학번", STUDENT_NAME "학생 이름", ROUND(AVG(POINT),1) "전체 평점"
FROM TB_GRADE G
JOIN TB_STUDENT S ON (G.STUDENT_NO = S.STUDENT_NO)
JOIN TB_DEPARTMENT D ON (S.DEPARTMENT_NO = D.DEPARTMENT_NO)
WHERE DEPARTMENT_NAME = '음악학과'
GROUP BY G.STUDENT_NO, STUDENT_NAME
ORDER BY 1;


-- 11.
SELECT DEPARTMENT_NAME "학과이름", STUDENT_NAME"학생이름", PROFESSOR_NAME"지도교수이름"
FROM TB_STUDENT
JOIN TB_DEPARTMENT USING (DEPARTMENT_NO)
JOIN TB_PROFESSOR ON (COACH_PROFESSOR_NO = PROFESSOR_NO)
WHERE STUDENT_NO = 'A313047';

-- 12.
SELECT STUDENT_NAME, TERM_NO "TERM_NAME"
FROM TB_STUDENT
JOIN TB_GRADE USING (STUDENT_NO)
JOIN TB_CLASS USING (CLASS_NO)
WHERE TERM_NO LIKE '2007%'
    AND CLASS_NAME = '인간관계론';

-- 13.
SELECT CLASS_NAME, DEPARTMENT_NAME
FROM TB_CLASS
LEFT JOIN TB_CLASS_PROFESSOR USING (CLASS_NO)
JOIN TB_DEPARTMENT USING (DEPARTMENT_NO)
WHERE CATEGORY = '예체능'
    AND PROFESSOR_NO IS NULL;
-- NULL값도 받기 위해서 LEFT JOIN을 해야한다!!! 

-- 14.
SELECT STUDENT_NAME"학생이름", NVL(PROFESSOR_NAME, '지도교수 미지정')"지도교수"
FROM TB_STUDENT S
LEFT JOIN TB_PROFESSOR ON (PROFESSOR_NO = COACH_PROFESSOR_NO)
JOIN TB_DEPARTMENT D ON (S.DEPARTMENT_NO = D.DEPARTMENT_NO)
WHERE DEPARTMENT_NAME = '서반아어학과'
ORDER BY STUDENT_NO;
-- NULL값도 받기 위해서 LEFT JOIN을 해야한다!!! 

-- 15.
SELECT STUDENT_NO "학번", STUDENT_NAME "이름", DEPARTMENT_NAME"학과이름", AVG(POINT)"평점"
FROM TB_STUDENT S
JOIN TB_DEPARTMENT D ON (S.DEPARTMENT_NO = D.DEPARTMENT_NO)
JOIN TB_GRADE USING (STUDENT_NO)
WHERE ABSENCE_YN = 'N'
GROUP BY STUDENT_NO, STUDENT_NAME, DEPARTMENT_NAME
HAVING AVG(POINT) >= 4.0
ORDER BY 1;

-- 16.
SELECT CLASS_NO, CLASS_NAME, AVG(POINT)
FROM TB_CLASS
JOIN TB_GRADE USING (CLASS_NO)
JOIN TB_DEPARTMENT USING (DEPARTMENT_NO)
WHERE DEPARTMENT_NAME = '환경조경학과'
     AND CLASS_TYPE LIKE '전공%'
GROUP BY CLASS_NO, CLASS_NAME
ORDER BY 1;


-- 17.
SELECT STUDENT_NAME, STUDENT_ADDRESS
FROM TB_STUDENT
WHERE DEPARTMENT_NO = (SELECT DEPARTMENT_NO
                        FROM TB_STUDENT
                        WHERE STUDENT_NAME ='최경희');

-- 18.
-- 18-1) 총평점에 같은 학생이 있다면 에러발생 가능함
SELECT STUDENT_NO, STUDENT_NAME
FROM TB_STUDENT
JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
JOIN TB_GRADE USING (STUDENT_NO)
WHERE DEPARTMENT_NAME = '국어국문학과'
GROUP BY STUDENT_NO, STUDENT_NAME
HAVING AVG(POINT) = (SELECT MAX(AVG(POINT))
                    FROM TB_STUDENT
                    JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
                    JOIN TB_GRADE USING (STUDENT_NO)
                    WHERE DEPARTMENT_NAME = '국어국문학과'
                    GROUP BY STUDENT_NO);

-- 18-2)
SELECT STUDENT_NO, STUDENT_NAME
FROM (
    SELECT STUDENT_NO, STUDENT_NAME, AVG(POINT)
    FROM TB_GRADE
    JOIN TB_STUDENT USING (STUDENT_NO)
    WHERE DEPARTMENT_NO = (SELECT DEPARTMENT_NO
                            FROM TB_DEPARTMENT
                            WHERE DEPARTMENT_NAME = '국어국문학과' )
    GROUP BY STUDENT_NO, STUDENT_NAME
    ORDER BY 3 DESC
    )
WHERE ROWNUM = 1;

-- 19.
SELECT DEPARTMENT_NAME"계열 학과명", ROUND(AVG(POINT),1)"전공평점"
FROM TB_DEPARTMENT
JOIN TB_CLASS USING (DEPARTMENT_NO)
JOIN TB_GRADE USING (CLASS_NO)
WHERE CATEGORY = (SELECT CATEGORY 
                FROM TB_DEPARTMENT
                WHERE DEPARTMENT_NAME = '환경조경학과')   --자연과학
AND CLASS_TYPE LIKE '전공%'
GROUP BY DEPARTMENT_NAME;

-- FROM > 인라인뷰 > WHERE 












